-- MySQL Script generated by MySQL Workbench
-- Tue Oct 26 00:27:54 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema accounts
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema accounts
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `accounts` DEFAULT CHARACTER SET utf8 ;
USE `accounts` ;

-- -----------------------------------------------------
-- Table `accounts`.`Person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Person` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Person` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `fName` VARCHAR(45) NULL,
  `lName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` CHAR(60) NOT NULL,
  `privilegeFlags` INT NULL,
  `birthdate` DATE NULL,
  `isGuest` TINYINT NULL DEFAULT 0,
  `createdDatetime` DATETIME NOT NULL DEFAULT current_timestamp,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Organisation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Organisation` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Organisation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `addressLine` VARCHAR(200) NULL,
  `postcode` VARCHAR(45) NULL,
  `suburb` VARCHAR(45) NULL,
  `securityFlags` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Dummy`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Dummy` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Dummy` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `organisationId` INT NULL,
  `qrCode` CHAR(4) NULL,
  `macAddress` BIGINT NULL,
  `name` VARCHAR(45) NULL,
  `personId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Dummy_Organisation1_idx` (`organisationId` ASC),
  INDEX `fk_Dummy_Person1_idx` (`personId` ASC),
  CONSTRAINT `fk_Dummy_Organisation1`
    FOREIGN KEY (`organisationId`)
    REFERENCES `accounts`.`Organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dummy_Person1`
    FOREIGN KEY (`personId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Result`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Result` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Result` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdDatetime` DATETIME NULL DEFAULT (current_timestamp),
  `data` VARCHAR(20000) NULL,
  `personId` INT NOT NULL,
  `dummyId` INT NOT NULL,
  `version` VARCHAR(10) NULL,
  PRIMARY KEY (`id`, `personId`, `dummyId`),
  INDEX `fk_result_person1_idx` (`personId` ASC),
  INDEX `fk_Result_Dummy1_idx` (`dummyId` ASC),
  CONSTRAINT `fk_result_person1`
    FOREIGN KEY (`personId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Result_Dummy1`
    FOREIGN KEY (`dummyId`)
    REFERENCES `accounts`.`Dummy` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Friendship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Friendship` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Friendship` (
  `requestorId` INT NOT NULL,
  `adresseeId` INT NOT NULL,
  `accepted` TINYINT NULL,
  `createdDatetime` DATETIME NOT NULL DEFAULT (current_timestamp),
  INDEX `fk_Friendship_Person1_idx` (`requestorId` ASC),
  INDEX `fk_Friendship_Person2_idx` (`adresseeId` ASC),
  PRIMARY KEY (`adresseeId`, `requestorId`),
  CONSTRAINT `fk_Friendship_Person1`
    FOREIGN KEY (`requestorId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Friendship_Person2`
    FOREIGN KEY (`adresseeId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Role` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`PersonRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`PersonRole` ;

CREATE TABLE IF NOT EXISTS `accounts`.`PersonRole` (
  `personId` INT NOT NULL,
  `roleId` INT NOT NULL,
  `organisationId` INT NOT NULL,
  INDEX `fk_Person_Role_Person1_idx` (`personId` ASC),
  PRIMARY KEY (`organisationId`, `personId`),
  INDEX `fk_Person_Role_Role1_idx` (`roleId` ASC),
  INDEX `fk_PersonRole_Organisation1_idx` (`organisationId` ASC),
  CONSTRAINT `fk_Person_Role_Person1`
    FOREIGN KEY (`personId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Person_Role_Role1`
    FOREIGN KEY (`roleId`)
    REFERENCES `accounts`.`Role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PersonRole_Organisation1`
    FOREIGN KEY (`organisationId`)
    REFERENCES `accounts`.`Organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`TokenType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`TokenType` ;

CREATE TABLE IF NOT EXISTS `accounts`.`TokenType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Token` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Token` (
  `personId` INT NOT NULL,
  `token` VARCHAR(300) NOT NULL,
  `tokenType` INT NOT NULL,
  PRIMARY KEY (`token`),
  INDEX `fk_Tokens_Person1_idx` (`personId` ASC),
  INDEX `fk_Token_TokenType1_idx` (`tokenType` ASC),
  CONSTRAINT `fk_Token_Person1`
    FOREIGN KEY (`personId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Token_TokenType1`
    FOREIGN KEY (`tokenType`)
    REFERENCES `accounts`.`TokenType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`Group` ;

CREATE TABLE IF NOT EXISTS `accounts`.`Group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `joinCode` CHAR(8) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `joinCode_UNIQUE` (`joinCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `accounts`.`PersonGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accounts`.`PersonGroup` ;

CREATE TABLE IF NOT EXISTS `accounts`.`PersonGroup` (
  `personId` INT NOT NULL,
  `groupId` INT NOT NULL,
  PRIMARY KEY (`personId`, `groupId`),
  INDEX `fk_PersonGroup_Person1_idx` (`personId` ASC),
  INDEX `fk_PersonGroup_Group1_idx` (`groupId` ASC),
  CONSTRAINT `fk_PersonGroup_Person1`
    FOREIGN KEY (`personId`)
    REFERENCES `accounts`.`Person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PersonGroup_Group1`
    FOREIGN KEY (`groupId`)
    REFERENCES `accounts`.`Group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
